DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS restaurants CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS menus CASCADE;
DROP TABLE IF EXISTS order_items CASCADE;
DROP TABLE IF EXISTS items CASCADE;
CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  phone_number VARCHAR(255) NOT NULL,
  role VARCHAR(255) NOT NULL
);

CREATE TABLE restaurants (
id SERIAL PRIMARY KEY NOT NULL,
owner_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
name VARCHAR(255) NOT NULL,
category VARCHAR(255) NOT NULL,
address VARCHAR(255) NOT NULL,
city VARCHAR(255) NOT NULL,
province VARCHAR(255) NOT NULL,
postal_code VARCHAR(255) NOT NULL,
active BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE orders (
  id SERIAL PRIMARY KEY NOT NULL,
  quantity INTEGER NOT NULL,
  time_entered TIMESTAMP NOT NULL,
  time_promised TIMESTAMP NOT NULL,
  customer_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  restaurant_id INTEGER REFERENCES restaurants(id) ON DELETE CASCADE,
  active BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE order_items(
  order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
  item_id INTEGERS REFERENCES items(id) ON DELETE CASCADE,
  quantity INTEGER NOT NULL
);

CREATE TABLE items(
  id SERIAL PRIMARY KEY NOT NULL,
  course VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  price INTEGER NOT NULL,
  size VARCHAR(255) NOT NULL,
  menu_id INTEGER REFERNCES menus(id) ON DELETE CASCADE,
  active BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE menus(
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  restaurant_id INTEGER REFERENCES restaurants(id) ON DELETE CASCADE
);
